#
# Log4J 配置文件
#

# 定义缺省的日志级别和输出对象
log4j.rootLogger=DEBUG,console,logfile

# 设定控制台输出模式
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%d{MM/dd HH:mm:ss}] [%-3p] %c{1}: %m%n

# 针对package定义日志级别
log4j.logger.org.apache=DEBUG
log4j.logger.com.jqd=DEBUG

# 设定日志文件的输出模式

# log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
log4j.appender.logfile.File=d:/logs/examples-struts2.log
log4j.appender.logfile.MaxFileSize=5MB
#log4j.appender.logfile.MaxBackupIndex=100
log4j.appender.logfile.Threshold=DEBUG
# log4j.appender.logfile.DatePattern=yyyyMMdd

log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d{MM/dd HH:mm:ss} [%-3p] %c{1}: %m%n

# sql log
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG

# All hibernate log output of "info " level or higher goes to stdout. 
# For more verbose logging, change the "info " to "debug " on the last line. 
log4j.logger.org.hibernate.ps.PreparedStatementCache=DEBUG
log4j.logger.org.hibernate=DEBUG

# Changing the log level to DEBUG will result in Hibernate generated 
# SQL to be logged. 
log4j.logger.org.hibernate.SQL=DEBUG

# Changing the log level to DEBUG will result in the PreparedStatement 
# bound variable values to be logged. 
log4j.logger.org.hibernate.type=DEBUG

